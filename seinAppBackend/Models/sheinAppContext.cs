// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace seinAppBackend.Models;

public partial class sheinAppContext : DbContext
{
    public sheinAppContext(DbContextOptions<sheinAppContext> options)
        : base(options)
    {
    }

    public virtual DbSet<CuentasCobrar> CuentasCobrar { get; set; }

    public virtual DbSet<DataAppStore> DataAppStore { get; set; }

    public virtual DbSet<FilesSeason> FilesSeason { get; set; }

    public virtual DbSet<Producto> Producto { get; set; }

    public virtual DbSet<Usuario> Usuario { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CuentasCobrar>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cuentasCobrar1");

            entity.ToTable("cuentasCobrar");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Avance)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("avance");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Idcli).HasColumnName("idcli");
            entity.Property(e => e.Idproducto).HasColumnName("idproducto");
            entity.Property(e => e.Observacion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("observacion");
            entity.Property(e => e.Usercrea).HasColumnName("usercrea");
        });

        modelBuilder.Entity<DataAppStore>(entity =>
        {
            entity.ToTable("dataAppStore");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Feccrea)
                .HasColumnType("datetime")
                .HasColumnName("feccrea");
            entity.Property(e => e.NombreAppStore)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombreAppStore");
            entity.Property(e => e.Observacion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("observacion");
            entity.Property(e => e.Usercrea).HasColumnName("usercrea");
        });

        modelBuilder.Entity<FilesSeason>(entity =>
        {
            entity.ToTable("filesSeason");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Codentity)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("codentity");
            entity.Property(e => e.Fecrea)
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Url)
                .HasMaxLength(350)
                .IsUnicode(false)
                .HasColumnName("url");
            entity.Property(e => e.Usercrea)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("usercrea");
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_producto1");

            entity.ToTable("producto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Idcliente).HasColumnName("idcliente");
            entity.Property(e => e.Idusuario).HasColumnName("idusuario");
            entity.Property(e => e.NombreProducto)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nombreProducto");
            entity.Property(e => e.Precioacliente)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("precioacliente");
            entity.Property(e => e.Preciodeapp)
                .HasColumnType("decimal(10, 2)")
                .HasColumnName("preciodeapp");
            entity.Property(e => e.Tienda).HasColumnName("tienda");
            entity.Property(e => e.Urlimagen)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("urlimagen");
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.ToTable("usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cedula)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cedula");
            entity.Property(e => e.Direccion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.Edad).HasColumnName("edad");
            entity.Property(e => e.Email)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Estado).HasColumnName("estado");
            entity.Property(e => e.Fecrea)
                .HasColumnType("datetime")
                .HasColumnName("fecrea");
            entity.Property(e => e.Nombre)
                .HasMaxLength(150)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Password)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Telefono)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.Tipo).HasColumnName("tipo");
            entity.Property(e => e.Usercrea).HasColumnName("usercrea");
        });

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}